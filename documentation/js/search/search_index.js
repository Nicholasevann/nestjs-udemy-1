var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.708,1,2.93,2,1.359,3,0.492,4,0.423,5,0.423,6,3.096,7,0.722,8,2.095,9,4.464,10,1.504,11,0.039,12,1.002,13,3.761,14,1.667,15,1.708,16,0.618,17,0.902,18,2.547,19,3.096,20,0.492,21,0.024,22,2.07,23,1.667,24,1.667,25,3.761,26,0.031,27,0.031]],["title/modules/AppModule.html",[28,1.083,29,1.858]],["body/modules/AppModule.html",[1,2.897,2,1.491,3,0.4,4,0.344,5,0.344,11,0.039,16,0.705,17,0.733,18,2.654,19,2.515,20,0.4,21,0.02,26,0.027,27,0.027,28,1.689,29,3.616,30,1.354,31,1.354,32,1.682,33,1.682,34,1.354,35,2.573,36,1.682,37,2.515,38,2.515,39,2.515,40,2.654,41,2.966,42,2.388,43,2.272,44,1.682,45,1.505,46,3.055,47,2.558,48,3.055,49,3.055,50,3.055,51,3.055]],["title/injectables/AppService.html",[18,1.477,52,1.083]],["body/injectables/AppService.html",[3,0.517,4,0.445,5,0.445,7,0.759,8,2.161,9,4.544,11,0.039,12,1.054,14,1.752,15,1.762,16,0.517,17,0.948,18,2.402,20,0.517,21,0.026,24,1.752,26,0.032,27,0.032,52,1.762,53,2.177,54,3.255,55,3.954,56,3.954,57,3.954]],["title/controllers/AuthController.html",[0,1.083,58,1.858]],["body/controllers/AuthController.html",[0,1.422,2,1.422,3,0.515,4,0.443,5,0.443,11,0.039,16,0.636,17,0.944,20,0.515,21,0.025,22,2.167,23,1.744,26,0.031,27,0.031,58,3.014,59,3.24,60,2.782,61,3.936,62,2.338,63,3.24,64,3.936,65,2.44,66,3.24,67,3.24,68,2.44,69,2.167]],["title/modules/AuthModule.html",[28,1.083,40,1.477]],["body/modules/AuthModule.html",[2,1.533,3,0.416,4,0.358,5,0.358,11,0.039,16,0.693,17,0.763,20,0.416,21,0.021,26,0.027,27,0.027,28,1.724,30,2.114,31,1.41,32,1.751,33,1.751,34,1.41,35,2.626,36,2.626,40,2.742,42,1.879,43,2.334,44,1.751,45,1.567,47,1.972,58,2.957,62,2.617,63,2.619,69,2.334,70,2.619,71,2.619,72,2.619,73,3.181,74,2.629,75,3.181,76,2.619,77,2.619,78,2.619]],["title/injectables/AuthService.html",[52,1.083,62,1.329]],["body/injectables/AuthService.html",[3,0.363,4,0.312,5,0.312,7,0.533,8,1.712,11,0.039,12,1.184,14,1.712,15,2.104,16,0.505,17,0.665,20,0.363,21,0.018,23,1.23,24,1.712,26,0.025,27,0.025,52,1.396,53,1.527,62,1.712,65,2.395,74,1.72,79,2.284,80,2.88,81,3.181,82,4.445,83,2.284,84,2.021,85,2.774,86,2.447,87,2.447,88,1.312,89,1.97,90,3.181,91,3.863,92,2.774,93,3.659,94,3.863,95,3.863,96,3.659,97,2.447,98,2.774,99,1.961,100,2.284,101,2.284,102,2.284,103,2.284,104,3.863,105,2.774,106,1.961,107,1.527,108,2.774,109,2.774,110,2.774,111,2.284]],["title/classes/CreatePostDto.html",[21,0.019,112,1.477]],["body/classes/CreatePostDto.html",[3,0.178,4,0.153,5,0.153,7,0.261,10,1.86,11,0.039,12,1.239,15,1.846,16,0.434,20,0.374,21,0.018,26,0.014,27,0.014,69,1.234,88,1.559,89,2.061,111,2.729,112,1.104,113,0.603,114,2.348,115,0.843,116,0.993,117,3.433,118,2.858,119,2.858,120,2.858,121,2.858,122,3.665,123,4.17,124,2.591,125,3.665,126,3.018,127,3.247,128,2.602,129,3.733,130,1.36,131,1.36,132,2.241,133,2.241,134,2.241,135,1.36,136,1.36,137,2.272,138,2.02,139,2.241,140,1.36,141,1.36,142,1.36,143,3.018,144,2.729,145,3.944,146,1.36,147,1.36,148,3.314,149,2.241,150,2.241,151,2.241,152,2.241,153,2.241,154,2.241,155,1.36,156,1.36,157,2.241,158,1.36,159,1.36,160,1.845,161,3.314,162,1.36,163,3.314,164,3.314,165,1.584,166,1.845,167,1.845,168,2.241,169,2.241,170,2.241,171,1.36,172,3.018,173,1.36,174,1.36,175,1.36,176,1.36,177,1.36,178,3.314,179,1.36,180,1.36,181,1.36,182,2.788,183,1.36,184,1.12,185,2.272,186,1.12,187,2.948,188,2.241,189,2.241,190,2.858,191,2.241,192,0.67,193,0.67,194,1.36,195,0.962,196,3.018,197,3.433,198,0.67,199,1.845,200,1.845,201,1.845,202,2.241,203,1.845,204,1.845,205,1.845,206,1.845,207,1.86,208,2.353,209,2.353,210,1.36,211,1.36,212,1.36,213,1.36,214,1.36,215,1.36,216,1.36,217,1.36,218,1.36,219,0.962]],["title/classes/CreatePostMetaOptionsDto.html",[21,0.019,137,1.858]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.481,4,0.414,5,0.414,7,0.706,10,1.471,11,0.038,12,1.242,15,1.685,16,0.481,20,0.481,21,0.03,26,0.03,27,0.03,88,1.376,113,1.631,114,2.521,116,2.066,128,2.521,137,2.89,138,3.617,182,3.295,185,2.89,192,1.813,220,3.029,221,4.212,222,4.212,223,3.679,224,3.679,225,3.679]],["title/classes/CreateUserDto.html",[21,0.019,226,1.477]],["body/classes/CreateUserDto.html",[3,0.356,4,0.306,5,0.306,7,0.522,10,1.906,11,0.038,12,1.27,15,1.969,16,0.356,20,0.356,21,0.025,26,0.025,27,0.025,88,1.407,96,4.131,99,3.109,113,1.206,116,1.689,165,2.694,166,3.138,167,3.138,182,3.369,184,2.24,185,2.954,186,3.138,187,2.694,192,1.341,209,3.138,226,1.878,227,4.131,228,1.923,229,3.621,230,4.399,231,2.721,232,2.721,233,2.721,234,2.721,235,2.721,236,2.721,237,2.721,238,3.811,239,3.811,240,3.811,241,3.811,242,5.448,243,3.811,244,4.766,245,2.098,246,3.811,247,3.811,248,2.721,249,3.811,250,2.721,251,3.811,252,2.721]],["title/classes/GetUsersParamDto.html",[21,0.019,253,1.858]],["body/classes/GetUsersParamDto.html",[3,0.448,4,0.386,5,0.386,7,0.658,10,1.37,11,0.039,12,0.913,16,0.647,20,0.448,21,0.032,26,0.029,27,0.029,88,1.461,89,1.973,97,2.989,107,2.451,113,1.518,116,1.973,127,2.82,129,3.148,187,3.148,192,1.688,195,2.422,197,3.666,198,1.688,207,1.37,245,2.723,253,2.76,254,3.666,255,2.76,256,2.82,257,3.666,258,3.426,259,3.426,260,3.666,261,2.422]],["title/classes/PatchPostDto.html",[21,0.019,262,1.65]],["body/classes/PatchPostDto.html",[3,0.452,4,0.389,5,0.389,7,0.663,10,1.381,11,0.039,12,0.92,16,0.65,20,0.452,21,0.029,26,0.029,27,0.029,88,1.322,97,2.996,112,1.702,113,1.531,115,2.141,116,1.984,144,2.844,185,2.775,192,1.702,193,1.702,196,3.685,198,1.702,207,1.381,245,2.464,260,3.685,262,2.464,263,3.685,264,3.685,265,4.476,266,3.454,267,3.454,268,2.844,269,2.441,270,3.454,271,3.454,272,3.454,273,2.441,274,2.844]],["title/classes/PatchUserDto.html",[21,0.019,275,1.858]],["body/classes/PatchUserDto.html",[3,0.537,4,0.462,5,0.462,11,0.038,16,0.653,20,0.537,21,0.027,26,0.032,27,0.032,113,1.82,193,2.024,226,2.024,228,2.904,264,4.109,268,3.382,275,3.094,276,3.382,277,4.991,278,3.382,279,3.382,280,2.904]],["title/controllers/PostsController.html",[0,1.083,281,1.858]],["body/controllers/PostsController.html",[0,0.788,2,0.788,3,0.285,4,0.246,5,0.246,7,0.419,8,1.439,10,1.719,11,0.039,12,1.146,14,1.906,15,1.402,16,0.601,17,0.523,20,0.285,21,0.014,22,1.201,23,0.967,24,2.037,26,0.021,27,0.021,60,1.542,80,3.019,86,2.136,87,2.136,88,1.146,89,1.72,112,2.375,114,1.075,124,2.296,128,2.265,193,1.6,198,1.075,207,1.719,219,2.296,262,2.653,269,2.296,273,1.542,281,2.013,282,1.796,283,2.181,284,2.674,285,4.3,286,3.248,287,3.248,288,1.796,289,2.181,290,2.013,291,2.181,292,3.248,293,2.296,294,2.181,295,3.248,296,3.248,297,3.248,298,2.181,299,2.181,300,2.181,301,3.248,302,2.181,303,2.674,304,2.181,305,3.195,306,2.181,307,3.248,308,3.248,309,3.248,310,3.248,311,2.181,312,1.542,313,1.912,314,1.796,315,2.674,316,3.195,317,2.181,318,1.542,319,2.181,320,2.181,321,2.181,322,2.181,323,2.181,324,1.796,325,1.542,326,2.181,327,2.181,328,2.181,329,2.181]],["title/modules/PostsModule.html",[28,1.083,41,1.65]],["body/modules/PostsModule.html",[2,1.576,3,0.434,4,0.374,5,0.374,11,0.039,16,0.703,17,0.796,20,0.434,21,0.021,26,0.028,27,0.028,28,1.76,30,1.933,31,1.471,32,1.827,33,1.827,34,1.471,35,2.681,36,1.827,41,3.141,42,2.445,43,2.401,44,1.827,45,1.635,47,2.703,69,1.827,76,2.732,281,3.02,313,2.718,314,2.732,330,2.732,331,3.318,332,2.732,333,3.318,334,3.318]],["title/injectables/PostsService.html",[52,1.083,313,1.477]],["body/injectables/PostsService.html",[3,0.278,4,0.239,5,0.239,7,0.408,8,1.412,11,0.04,12,1.212,14,1.882,15,1.644,16,0.555,17,0.51,20,0.278,21,0.014,22,1.17,23,0.942,24,2.016,26,0.021,27,0.021,52,1.152,53,1.17,65,1.318,66,2.624,67,2.624,68,1.976,80,3.002,83,1.75,84,1.698,86,2.337,87,2.337,88,1.254,89,1.882,90,2.624,101,1.75,106,1.503,107,2.104,112,2.439,114,1.048,117,3.931,126,3.147,128,2.613,165,3.001,193,1.57,261,2.253,262,2.725,269,2.253,284,2.624,288,2.624,293,2.253,303,1.75,313,1.57,318,1.503,325,1.503,335,1.75,336,3.495,337,3.187,338,3.187,339,2.126,340,2.126,341,3.001,342,2.126,343,3.187,344,2.126,345,3.187,346,2.126,347,3.187,348,2.126,349,2.126,350,2.126]],["title/controllers/UsersController.html",[0,1.083,351,1.858]],["body/controllers/UsersController.html",[0,0.624,2,0.624,3,0.226,4,0.194,5,0.194,7,0.332,8,1.204,10,1.522,11,0.039,12,1.014,14,1.687,16,0.575,17,0.414,20,0.226,21,0.011,22,0.951,23,0.765,24,1.488,26,0.027,27,0.018,60,1.221,80,2.861,84,1.342,86,2.278,87,2.419,88,1.481,89,1.947,97,2.095,107,2.531,124,1.221,128,1.654,160,2.236,198,0.851,207,1.904,226,2.346,245,3.086,253,2.566,255,1.684,257,2.236,273,1.221,274,3.134,275,3.037,280,1.92,290,2.36,293,1.92,305,1.422,312,1.92,315,2.236,316,2.236,318,1.221,324,1.422,341,1.221,351,1.684,352,1.422,353,2.236,354,3.357,355,3.357,356,2.716,357,1.727,358,1.727,359,1.727,360,4.279,361,1.727,362,4.128,363,1.727,364,1.727,365,1.727,366,2.716,367,2.716,368,1.727,369,3.806,370,1.727,371,1.727,372,2.716,373,2.716,374,1.727,375,1.727,376,2.716,377,1.727,378,1.727,379,1.727,380,4.139,381,1.727,382,1.422,383,1.727,384,1.727,385,1.422,386,3.357,387,1.727,388,2.716,389,2.716,390,2.716,391,2.716,392,1.727,393,1.727,394,1.727,395,1.727,396,1.727,397,1.727,398,1.727,399,1.727,400,1.727]],["title/modules/UsersModule.html",[28,1.083,42,1.329]],["body/modules/UsersModule.html",[2,1.529,3,0.415,4,0.357,5,0.357,11,0.039,16,0.692,17,0.76,20,0.415,21,0.02,26,0.027,27,0.027,28,1.721,30,2.11,31,1.405,32,1.745,33,1.745,34,1.405,35,2.621,36,2.621,40,2.084,42,2.464,43,2.329,44,1.745,45,1.561,47,1.965,68,1.965,69,2.329,74,2.622,77,2.609,78,2.609,84,2.36,351,2.952,385,2.609,401,2.609,402,2.609,403,2.609,404,3.169,405,3.169,406,3.169]],["title/injectables/UsersService.html",[52,1.083,84,1.199]],["body/injectables/UsersService.html",[3,0.237,4,0.204,5,0.204,7,0.348,8,1.25,11,0.04,12,1.041,14,1.987,15,1.53,16,0.453,17,0.435,20,0.237,21,0.012,23,0.803,24,1.535,26,0.018,27,0.018,52,1.019,53,0.997,62,2.253,65,2.422,74,1.123,80,2.737,81,2.322,84,1.563,86,2.151,87,2.151,88,1.154,89,1.732,93,1.492,97,2.737,99,2.762,100,1.492,102,1.492,103,1.492,106,1.281,107,3.05,193,1.39,207,1.693,226,1.925,229,3.217,245,2.85,255,3.001,261,1.281,280,1.281,290,1.748,312,2.993,325,1.994,336,2.322,341,1.994,353,2.322,360,3.985,362,2.322,382,1.492,407,1.492,408,2.82,409,2.322,410,2.82,411,1.812,412,1.812,413,2.82,414,2.82,415,2.82,416,2.82,417,1.812,418,3.908,419,2.82,420,1.812,421,3.908,422,2.82,423,2.82,424,2.82,425,2.82,426,1.812,427,1.812,428,1.812,429,1.812,430,1.812,431,2.82,432,2.82,433,1.812,434,1.812,435,1.812,436,1.812]],["title/coverage.html",[437,2.88]],["body/coverage.html",[0,1.783,1,1.828,5,0.332,6,2.427,11,0.039,18,1.453,21,0.034,26,0.026,27,0.026,34,1.307,52,1.783,54,2.427,58,1.828,59,2.427,62,1.307,79,2.427,84,1.179,88,0.871,112,1.453,114,1.985,115,2.498,128,1.453,137,1.828,138,2.084,220,2.427,226,1.453,227,2.427,228,2.848,253,1.828,254,2.427,255,1.828,256,2.427,262,1.623,263,2.427,275,1.828,276,2.427,281,1.828,282,2.427,290,1.828,313,1.453,335,2.427,351,1.828,352,2.427,407,2.427,437,2.084,438,2.427,439,2.948,440,2.948,441,5.874,442,4.933,443,4.589,444,2.948,445,2.427,446,2.948,447,2.948,448,2.948,449,4.589,450,2.948,451,2.948,452,2.948,453,2.948,454,2.948]],["title/dependencies.html",[31,1.596,455,2.068]],["body/dependencies.html",[11,0.039,17,0.944,21,0.031,26,0.031,27,0.031,31,1.744,192,1.939,195,2.782,198,1.939,278,3.24,279,3.24,456,3.936,457,3.936,458,5.276,459,3.936,460,3.936,461,3.936,462,3.936,463,3.936,464,3.936,465,3.936,466,3.936,467,3.936,468,3.936,469,3.936,470,3.936]],["title/miscellaneous/enumerations.html",[471,1.557,472,2.965]],["body/miscellaneous/enumerations.html",[7,0.752,11,0.038,26,0.031,27,0.031,114,1.93,115,3.264,143,3.991,172,3.991,199,3.991,200,3.991,201,3.991,204,3.991,205,3.991,206,3.991,222,4.742,471,2.429,472,3.225,473,4.848]],["title/miscellaneous/functions.html",[471,1.557,474,2.965]],["body/miscellaneous/functions.html",[7,0.869,11,0.034,26,0.034,27,0.034,34,2.483,445,3.725,471,2.805,474,3.725,475,4.525]],["title/index.html",[7,0.482,476,2.512,477,2.512]],["body/index.html",[4,0.227,11,0.037,26,0.02,27,0.02,45,2.307,68,1.252,129,2.924,203,3.406,207,0.808,208,4.127,219,1.428,221,1.663,409,1.663,437,1.428,438,2.524,478,2.02,479,2.02,480,3.705,481,3.066,482,2.02,483,2.02,484,2.02,485,2.02,486,3.066,487,3.705,488,2.02,489,2.02,490,4.137,491,2.02,492,5.013,493,2.02,494,4.865,495,2.02,496,2.02,497,2.02,498,3.066,499,2.02,500,3.066,501,2.02,502,3.705,503,2.02,504,3.066,505,2.02,506,2.02,507,2.02,508,2.02,509,2.02,510,4.137,511,4.682,512,3.066,513,2.02,514,2.02,515,2.02,516,2.02,517,2.02,518,4.682,519,3.066,520,2.02,521,3.066,522,2.02,523,2.02,524,3.066,525,4.448,526,4.137,527,2.02,528,3.066,529,2.02,530,2.02,531,2.02,532,2.02,533,4.137,534,2.02,535,2.02,536,2.02,537,2.02,538,2.02,539,3.066,540,2.02,541,2.02,542,2.02,543,2.02,544,3.066,545,2.02,546,2.02,547,2.02,548,3.066,549,2.02,550,2.02,551,3.406,552,3.066,553,2.02,554,2.02,555,2.02,556,2.02,557,2.02,558,2.02,559,2.02,560,2.02,561,3.066,562,2.02,563,2.02,564,2.02,565,2.02,566,3.705,567,2.02,568,2.02,569,2.02,570,2.02,571,2.02,572,2.02,573,3.066,574,2.02,575,2.02,576,2.02,577,2.02,578,2.02,579,3.066,580,2.02,581,2.02,582,2.02,583,3.066,584,3.066,585,2.02,586,2.02,587,2.02,588,2.02,589,2.02,590,2.02,591,2.02,592,2.02,593,2.02,594,2.02,595,1.663,596,2.02,597,2.02,598,2.02,599,2.02,600,2.02,601,2.02,602,1.663]],["title/modules.html",[30,1.806]],["body/modules.html",[11,0.033,26,0.033,27,0.033,29,2.623,30,1.875,40,2.085,41,2.329,42,1.875,551,4.65,603,5.649,604,5.649,605,5.649]],["title/overview.html",[606,3.355]],["body/overview.html",[2,1.133,11,0.038,18,2.333,26,0.027,27,0.027,28,1.133,29,3.574,30,1.389,31,1.389,32,1.725,33,1.725,34,1.389,35,1.725,36,1.725,37,2.58,38,2.58,39,2.58,40,2.674,41,3.052,42,2.457,43,2.311,44,1.725,45,1.544,53,1.725,62,2.457,70,2.58,71,2.58,72,2.58,84,2.217,113,1.389,313,2.333,330,2.58,332,2.58,401,2.58,402,2.58,403,2.58,606,2.58,607,4.735,608,3.134]],["title/properties.html",[116,1.596,455,2.068]],["body/properties.html",[11,0.038,26,0.034,27,0.034,116,1.974,207,1.781,595,3.667,602,3.667,609,4.454,610,4.454,611,4.454]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":610,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["01t12:00:00z",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t12:00:00z'})@isiso8601()@isoptional",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["06",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":261,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["1.1.26",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["11.0.1",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["1234",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["1})@isoptional()@isint()@type(undefined",{"_index":258,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2",{"_index":347,"title":{},"body":{"injectables/PostsService.html":{}}}],["2.1.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["201",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{}}}],["2024",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["4",{"_index":607,"title":{},"body":{"overview.html":{}}}],["400",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["5/5",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":608,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["9",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["add",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["added",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PostsService.html":{}}}],["allowing",{"_index":540,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":589,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apipropertyoptional",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apiquery",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('posts",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":511,"title":{},"body":{"index.html":{}}}],["applications",{"_index":486,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archived",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["article",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":58,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["authentication",{"_index":414,"title":{},"body":{"injectables/UsersService.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":595,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":528,"title":{},"body":{"index.html":{}}}],["backend",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["backers",{"_index":590,"title":{},"body":{"index.html":{}}}],["based",{"_index":523,"title":{},"body":{"index.html":{}}}],["board",{"_index":582,"title":{},"body":{"index.html":{}}}],["body",{"_index":273,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":605,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":603,"title":{},"body":{"modules.html":{}}}],["building",{"_index":481,"title":{},"body":{"index.html":{}}}],["call",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{}}}],["channel",{"_index":554,"title":{},"body":{"index.html":{}}}],["character",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":518,"title":{},"body":{"index.html":{}}}],["checks",{"_index":415,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":21,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":539,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":522,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":330,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":331,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":332,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":401,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":402,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":403,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":545,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["console.log('creating",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('is",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('update",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('user",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(getuserparamdto",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["const",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":411,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(userservice",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["contain",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["content",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":560,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":437,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["created.'})@apiresponse({status",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["createpost(@body",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["createpostdto",{"_index":112,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":137,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["createuser",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(user",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":226,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["data",{"_index":341,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":556,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":510,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":527,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":519,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":538,"title":{},"body":{"index.html":{}}}],["description",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":495,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":568,"title":{},"body":{"index.html":{}}}],["disable",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["discord",{"_index":553,"title":{},"body":{"index.html":{}}}],["dive",{"_index":555,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":438,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/get",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/patch",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":505,"title":{},"body":{"index.html":{}}}],["each",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":482,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":516,"title":{},"body":{"index.html":{}}}],["email",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["ensure",{"_index":514,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":572,"title":{},"body":{"index.html":{}}}],["enum",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":472,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["eslint/no",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["example",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"index.html":{}}}],["experience",{"_index":558,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exporting",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":264,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["fast",{"_index":531,"title":{},"body":{"index.html":{}}}],["featured",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":542,"title":{},"body":{"index.html":{}}}],["few",{"_index":533,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":336,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(limit",{"_index":419,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallbyuser",{"_index":337,"title":{},"body":{"injectables/PostsService.html":{}}}],["findallbyuser(userid",{"_index":343,"title":{},"body":{"injectables/PostsService.html":{}}}],["findbyid",{"_index":410,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["focus",{"_index":541,"title":{},"body":{"index.html":{}}}],["follow",{"_index":576,"title":{},"body":{"index.html":{}}}],["format",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["forwardref",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":480,"title":{},"body":{"index.html":{}}}],["full",{"_index":571,"title":{},"body":{"index.html":{}}}],["function",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":474,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":536,"title":{},"body":{"index.html":{}}}],["get('/:id/{:optional",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id/{:optional}')@apioperation({summary",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':userid",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["getallposts",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpostsbyuser",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["getpostsbyuser(@param('userid",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{}}}],["getpostsbyuser(userid",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":476,"title":{"index.html":{}},"body":{}}],["getuserparamdto",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(limit",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(getuserparamdto",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":253,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["getusersparamdto})@apiquery({name",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["graph",{"_index":563,"title":{},"body":{"index.html":{}}}],["grow",{"_index":586,"title":{},"body":{"index.html":{}}}],["hands",{"_index":557,"title":{},"body":{"index.html":{}}}],["handy",{"_index":546,"title":{},"body":{"index.html":{}}}],["headers",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":561,"title":{},"body":{"index.html":{}}}],["here",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PostsService.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["https://example.com/image.jpg",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://example.com/image.jpg'})@isstring()@isoptional",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":599,"title":{},"body":{"index.html":{}}}],["hyphens",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["id",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":520,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":543,"title":{},"body":{"index.html":{}}}],["inject",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":52,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["install",{"_index":535,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":493,"title":{},"body":{"index.html":{}}}],["instance",{"_index":413,"title":{},"body":{"injectables/UsersService.html":{}}}],["instanceof",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["interact",{"_index":564,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{}}}],["isarray",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauthenticated",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isauthenticated(token",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["isemail",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttypeenum",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(statusenum",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":260,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isnotempty()@isemail",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isstring()@minlength(8)@matches(/^(?=.*[a",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["iso",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":223,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(50",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(50",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["jane",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["jane.doe@example.com",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["job",{"_index":579,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":581,"title":{},"body":{"index.html":{}}}],["john",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["john.doe@example.com",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":592,"title":{},"body":{"index.html":{}}}],["json",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":596,"title":{},"body":{"index.html":{}}}],["key",{"_index":221,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"index.html":{}}}],["lastname",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":549,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":602,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":584,"title":{},"body":{"index.html":{}}}],["limit",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":578,"title":{},"body":{"index.html":{}}}],["list",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["logic",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PostsService.html":{}}}],["login",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":521,"title":{},"body":{"index.html":{}}}],["loop",{"_index":574,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["make",{"_index":271,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["makes",{"_index":529,"title":{},"body":{"index.html":{}}}],["managing",{"_index":409,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["mandatory",{"_index":272,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["matches",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":525,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(50",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"injectables/PostsService.html":{}}}],["meta",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":471,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":583,"title":{},"body":{"index.html":{}}}],["mode",{"_index":498,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["myśliwiec",{"_index":597,"title":{},"body":{"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":569,"title":{},"body":{"index.html":{}}}],["needed",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreatePostDto.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["nest",{"_index":487,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":601,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["nestjs'})@isstring()@minlength(3)@isnotempty",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["nestjs'})@isstring()@minlength(3)@isnotempty()@matches(/^[a",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":278,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":537,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["news",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":479,"title":{},"body":{"index.html":{}}}],["npm",{"_index":492,"title":{},"body":{"index.html":{}}}],["number",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["numbers",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["object",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["offer",{"_index":580,"title":{},"body":{"index.html":{}}}],["official",{"_index":526,"title":{},"body":{"index.html":{}}}],["one",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["open",{"_index":585,"title":{},"body":{"index.html":{}}}],["optional",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":220,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":224,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["options.dto.ts:7",{"_index":225,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":606,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":455,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pagination",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["param",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["param.dto.ts",{"_index":256,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:14",{"_index":259,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters.'})@apiresponse({status",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["parseintpipe",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":570,"title":{},"body":{"index.html":{}}}],["partial",{"_index":270,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype",{"_index":268,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":265,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":277,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:id",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchpost",{"_index":338,"title":{},"body":{"injectables/PostsService.html":{}}}],["patchpost(patchpostdto",{"_index":345,"title":{},"body":{"injectables/PostsService.html":{}}}],["patchpostdto",{"_index":262,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["patchuserdto",{"_index":275,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["per",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["platform",{"_index":524,"title":{},"body":{"index.html":{}}}],["please",{"_index":552,"title":{},"body":{"index.html":{}}}],["possible",{"_index":517,"title":{},"body":{"index.html":{}}}],["post",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["post'})@apiresponse({status",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["post()@apioperation({summary",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.'})@isstring()@isoptional",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto",{"_index":269,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["post.dto.ts",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post.dto.ts:102",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:113",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:12",{"_index":267,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:123",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:39",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:48",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:61",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:70",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:78",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:86",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:94",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":334,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":281,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":41,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":313,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["posttype",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posttypeenum",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttypeenum.article",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["prefix",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":500,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":478,"title":{},"body":{"index.html":{}}}],["project",{"_index":490,"title":{},"body":{"index.html":{}}}],["properties",{"_index":116,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["publish",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["published",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["query",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":550,"title":{},"body":{"index.html":{}}}],["read",{"_index":593,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":509,"title":{},"body":{"index.html":{}}}],["real",{"_index":565,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":489,"title":{},"body":{"index.html":{}}}],["required",{"_index":274,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/UsersController.html":{}}}],["required'})@isint()@isnotempty",{"_index":266,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["requiring",{"_index":532,"title":{},"body":{"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":544,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["results'})@apiquery({name",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["retrieve",{"_index":257,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{}}}],["retrieved",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":494,"title":{},"body":{"index.html":{}}}],["runs",{"_index":515,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":483,"title":{},"body":{"index.html":{}}}],["schema",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":484,"title":{},"body":{"index.html":{}}}],["service",{"_index":408,"title":{},"body":{"injectables/UsersService.html":{}}}],["setup",{"_index":491,"title":{},"body":{"index.html":{}}}],["side",{"_index":485,"title":{},"body":{"index.html":{}}}],["simple",{"_index":534,"title":{},"body":{"index.html":{}}}],["simulate",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["slug",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["special",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sponsors",{"_index":588,"title":{},"body":{"index.html":{}}}],["src/.../create",{"_index":473,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":406,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:10",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:15",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/posts/dtos/patch",{"_index":263,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:15",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:20",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:31",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:36",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":333,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":335,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":342,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:16",{"_index":344,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:25",{"_index":340,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:29",{"_index":346,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:7",{"_index":339,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":254,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":276,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":407,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:25",{"_index":420,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:39",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:48",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:9",{"_index":412,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:24",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:60",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:68",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":404,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":496,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":499,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":501,"title":{},"body":{"index.html":{}}}],["started",{"_index":477,"title":{"index.html":{}},"body":{}}],["starter",{"_index":488,"title":{},"body":{"index.html":{}}}],["statements",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["statusenum",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["statusenum.draft",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["stay",{"_index":573,"title":{},"body":{"index.html":{}}}],["steps",{"_index":512,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":530,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["summary",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":551,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":604,"title":{},"body":{"modules.html":{}}}],["table",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":513,"title":{},"body":{"index.html":{}}}],["test",{"_index":504,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":507,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":506,"title":{},"body":{"index.html":{}}}],["tests",{"_index":502,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":587,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.isauthenticated('sample",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.createpost(createpostdto",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findall",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findallbyuser(userid",{"_index":323,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.patchpost(patchpostdto",{"_index":329,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.userservice.findbyid(id",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyid(userid",{"_index":348,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(limit",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["time",{"_index":566,"title":{},"body":{"index.html":{}}}],["title",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["token",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":594,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tutorial",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["twitter",{"_index":600,"title":{},"body":{"index.html":{}}}],["type",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type\":\"blog",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type\":\"blog\"}'})@isoptional()@isjson",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["types",{"_index":279,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"index.html":{}}}],["undefined",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isarray()@isoptional()@isstring({each",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isenum(posttypeenum)@isnotempty",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isenum(statusenum)@isnotempty",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["understanding",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unique",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":503,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":611,"title":{},"body":{"properties.html":{}}}],["unsafe",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["updated",{"_index":350,"title":{},"body":{"injectables/PostsService.html":{}}}],["updatepost",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostdto",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":575,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(@body",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(patchuserdto",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["uppercase",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["url",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["used",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["user",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":280,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":349,"title":{},"body":{"injectables/PostsService.html":{}}}],["userid",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":255,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":405,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":351,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":84,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":567,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":222,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":609,"title":{},"body":{"properties.html":{}}}],["video",{"_index":559,"title":{},"body":{"index.html":{}}}],["visit",{"_index":548,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":562,"title":{},"body":{"index.html":{}}}],["void",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["watch",{"_index":497,"title":{},"body":{"index.html":{}}}],["website",{"_index":598,"title":{},"body":{"index.html":{}}}],["working",{"_index":547,"title":{},"body":{"index.html":{}}}],["world",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":577,"title":{},"body":{"index.html":{}}}],["yes",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["you'd",{"_index":591,"title":{},"body":{"index.html":{}}}],["you're",{"_index":508,"title":{},"body":{"index.html":{}}}],["z0",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*?&]{8",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {\n    // Constructor logic can be added here if needed\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)], // Import other modules if needed\n  exports: [AuthService], // Exporting AuthService to be used in other modules if needed\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthenticated(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly userService: UsersService,\n  ) {}\n  public login(email: string, password: string, id: string): string {\n    // Simulate a login process\n    const user = this.userService.findById(id);\n    return 'sample token';\n  }\n  public isAuthenticated(token: string): boolean {\n    // Simulate token validation\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Content of the post', example: 'This is the content of the post.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Featured image URL', example: 'https://example.com/image.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Meta options for the post', type: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of the post', enum: PostTypeEnum, example: undefined})@IsEnum(PostTypeEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Publish date (ISO 8601 format)', example: '2024-06-01T12:00:00Z'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Schema of the post (JSON string)', example: '{\"type\":\"blog\"}'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique slug for the post', example: 'understanding-nestjs'})@IsString()@MinLength(3)@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'Slug must be lowercase and can only contain letters, numbers, and hyphens'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status of the post', enum: StatusEnum, example: undefined})@IsEnum(StatusEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags for the post', example: undefined, type: undefined})@IsArray()@IsOptional()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the post', example: 'Understanding NestJS'})@IsString()@MinLength(3)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEnum,\n  MinLength,\n  IsNotEmpty,\n  Matches,\n  IsOptional,\n  IsJSON,\n  IsISO8601,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-options.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport enum PostTypeEnum {\n  ARTICLE = 'ARTICLE',\n  NEWS = 'NEWS',\n  TUTORIAL = 'TUTORIAL',\n  // add more as needed\n}\n\nexport enum StatusEnum {\n  DRAFT = 'DRAFT',\n  PUBLISHED = 'PUBLISHED',\n  ARCHIVED = 'ARCHIVED',\n  // add more as needed\n}\n\nexport class CreatePostDto {\n  @ApiProperty({\n    description: 'Title of the post',\n    example: 'Understanding NestJS',\n  })\n  @IsString()\n  @MinLength(3)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    description: 'Type of the post',\n    enum: PostTypeEnum,\n    example: PostTypeEnum.ARTICLE,\n  })\n  @IsEnum(PostTypeEnum)\n  @IsNotEmpty()\n  postType: PostTypeEnum;\n\n  @ApiProperty({\n    description: 'Unique slug for the post',\n    example: 'understanding-nestjs',\n  })\n  @IsString()\n  @MinLength(3)\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'Slug must be lowercase and can only contain letters, numbers, and hyphens',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'Status of the post',\n    enum: StatusEnum,\n    example: StatusEnum.DRAFT,\n  })\n  @IsEnum(StatusEnum)\n  @IsNotEmpty()\n  status: StatusEnum;\n\n  @ApiPropertyOptional({\n    description: 'Content of the post',\n    example: 'This is the content of the post.',\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: 'Schema of the post (JSON string)',\n    example: '{\"type\":\"blog\"}',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'Featured image URL',\n    example: 'https://example.com/image.jpg',\n  })\n  @IsString()\n  @IsOptional()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'Publish date (ISO 8601 format)',\n    example: '2024-06-01T12:00:00Z',\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishOn?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Tags for the post',\n    example: ['nestjs', 'backend', 'typescript'],\n    type: [String],\n  })\n  @IsArray()\n  @IsOptional()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    description: 'Meta options for the post',\n    type: [CreatePostMetaOptionsDto],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(8)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(50)\n  firstName: string;\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(50)\n  lastName: string;\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message:\n        'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character.',\n    },\n  )\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The ID of the user to retrieve', example: 1})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsOptional } from 'class-validator';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'The ID of the user to retrieve',\n    example: 1,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Id is required'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\nimport { CreatePostDto } from './create-post.dto';\n\n// partial type to make not mandatory body\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The Id is required',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getAllPosts\n                            \n                            \n                                    \n                                    Public\n                                getPostsByUser\n                            \n                            \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new post'})@ApiResponse({status: 201, description: 'The post has been successfully created.'})@ApiResponse({status: 400, description: 'Invalid input.'})\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getAllPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllPosts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPostsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPostsByUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':userId')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-return */\nimport { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { CreatePostDto } from 'src/posts/dtos/create-post.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@ApiTags('posts')\n@Controller('posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n\n  @Get()\n  public getAllPosts() {\n    return this.postsService.findAll();\n  }\n\n  @Get(':userId')\n  public getPostsByUser(@Param('userId') userId: string) {\n    return this.postsService.findAllByUser(userId);\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new post' })\n  @ApiResponse({\n    status: 201,\n    description: 'The post has been successfully created.',\n  })\n  @ApiResponse({ status: 400, description: 'Invalid input.' })\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    return this.postsService.createPost(createPostDto);\n  }\n\n  @Patch()\n  public updatePost(@Body() patchPostDto: PatchPostDto) {\n    return this.postsService.patchPost(patchPostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule], // Import other modules if needed\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPost\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findAllByUser\n                            \n                            \n                                    Public\n                                patchPost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { data: CreatePostDto; message: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patchPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchPost(patchPostDto: PatchPostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { data: PatchPostDto; message: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePostDto } from 'src/posts/dtos/create-post.dto';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { PatchPostDto } from '../dtos/patch-post.dto';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly userService: UsersService) {}\n\n  public findAll() {\n    return [\n      { title: 'Post 1', content: 'Content of post 1' },\n      { title: 'Post 2', content: 'Content of post 2' },\n    ];\n  }\n  public findAllByUser(userId: string) {\n    const user = this.userService.findById(userId);\n    if (!user) {\n      return [];\n    }\n    return [\n      { title: `Post by ${user.id}`, content: 'Content of post by user' },\n    ];\n  }\n  public createPost(createPostDto: CreatePostDto) {\n    // Logic to create a post can be added here\n    return { data: createPostDto, message: 'Post created successfully' };\n  }\n  public patchPost(patchPostDto: PatchPostDto) {\n    // Logic to create a post can be added here\n    return { data: patchPostDto, message: 'Post updated successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsersById\n                            \n                            \n                                    \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsersById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersById(getUserParamDto: GetUsersParamDto, limit?: number, page?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/{:optional}')@ApiOperation({summary: 'Get user by ID', description: 'Retrieve a user by their unique ID, with optional parameters.'})@ApiResponse({status: 200, description: 'User retrieved successfully.', type: GetUsersParamDto})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'Limit the number of results'})@ApiQuery({name: 'page', type: 'number', required: false, description: 'Page the number of results'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  Get,\n  Headers,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  public getUsers(\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(limit, page);\n  }\n\n  @Post()\n  public createUser(@Body() createUserDto: CreateUserDto) {\n    console.log('User data:', createUserDto instanceof CreateUserDto);\n    return this.usersService.createUser(createUserDto);\n  }\n\n  @Get('/:id/{:optional}')\n  @ApiOperation({\n    summary: 'Get user by ID',\n    description:\n      'Retrieve a user by their unique ID, with optional parameters.',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User retrieved successfully.',\n    type: GetUsersParamDto,\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'Limit the number of results',\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description: 'Page the number of results',\n  })\n  public getUsersById(\n    @Param() getUserParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit?: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page?: number,\n  ) {\n    console.log(getUserParamDto, limit, page);\n  }\n  @Patch('/:id')\n  public updateUser(@Body() patchUserDto: PatchUserDto) {\n    console.log('Update user:', patchUserDto);\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService], // Exporting UsersService to be used in other modules if needed\n  imports: [forwardRef(() => AuthModule)], // You can import other modules here if needed\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing users.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createUser\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor for UsersService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService instance for authentication checks.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(user: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Created user object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Find all users with pagination.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of users per page.\n\n                                            \n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Page number.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                List of users.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Find a user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                User object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n/**\n * Service for managing users.\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * Constructor for UsersService.\n   * @param authService AuthService instance for authentication checks.\n   */\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * Find all users with pagination.\n   * @param limit Number of users per page.\n   * @param page Page number.\n   * @returns List of users.\n   */\n  public findAll(limit: number, page: number) {\n    const isAuthenticated = this.authService.isAuthenticated('sample-token');\n    console.log('Is authenticated:', isAuthenticated);\n    return [\n      { firstName: 'John', email: 'john.doe@example.com' },\n      { firstName: 'Jane', email: 'jane.doe@example.com' },\n    ];\n  }\n\n  /**\n   * Find a user by ID.\n   * @param id User ID.\n   * @returns User object.\n   */\n  public findById(id: string) {\n    return { id: 1234, firstName: 'John', email: 'john.doe@example.com' };\n  }\n\n  /**\n   * Create a new user.\n   * @param user User data.\n   * @returns Created user object.\n   */\n  public createUser(user: CreateUserDto) {\n    console.log('Creating user:', user);\n    return { id: 1, ...user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostTypeEnum   (src/.../create-post.dto.ts)\n                        \n                        \n                            StatusEnum   (src/.../create-post.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/dtos/create-post.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        PostTypeEnum\n                    \n                \n                        \n                            \n                                 ARTICLE\n                            \n                        \n                        \n                            \n                                Value : ARTICLE\n                            \n                        \n                        \n                            \n                                 NEWS\n                            \n                        \n                        \n                            \n                                Value : NEWS\n                            \n                        \n                        \n                            \n                                 TUTORIAL\n                            \n                        \n                        \n                            \n                                Value : TUTORIAL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : DRAFT\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : PUBLISHED\n                            \n                        \n                        \n                            \n                                 ARCHIVED\n                            \n                        \n                        \n                            \n                                Value : ARCHIVED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
